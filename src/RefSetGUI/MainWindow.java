/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package RefSetGUI;

import RefPoints.NegativeValueException;
import RefPoints.NullValueException;
import RefPoints.RefPoint;
import RefSetAlgorithm.Alternative;
import RefSetAlgorithm.Problem;
import de.erichseifert.gral.data.DataTable;
import de.erichseifert.gral.plots.XYPlot;
import de.erichseifert.gral.plots.points.DefaultPointRenderer2D;
import de.erichseifert.gral.plots.points.PointRenderer;
import de.erichseifert.gral.ui.InteractivePanel;
import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Tomko
 */
public class MainWindow extends javax.swing.JFrame {

    final private JFileChooser fc1 = new JFileChooser(System.getProperty("user.dir"));
    XYPlot plot = null;
    
    Problem problem = new Problem();
  /**
   * Creates new form MainWindow
   */
  public MainWindow() {
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jTabbedPane1 = new javax.swing.JTabbedPane();
    jPanel1 = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    criteriaNumberTextField = new javax.swing.JTextField();
    jButton1 = new javax.swing.JButton();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    jLabel4 = new javax.swing.JLabel();
    jLabel5 = new javax.swing.JLabel();
    jLabel6 = new javax.swing.JLabel();
    jLabel7 = new javax.swing.JLabel();
    jScrollPane1 = new javax.swing.JScrollPane();
    CriteriaList = new javax.swing.JList();
    jScrollPane2 = new javax.swing.JScrollPane();
    AlternativeList = new javax.swing.JList();
    jScrollPane3 = new javax.swing.JScrollPane();
    BoundsOfOptimalityList = new javax.swing.JList();
    jScrollPane4 = new javax.swing.JScrollPane();
    TargetPointsList = new javax.swing.JList();
    jScrollPane5 = new javax.swing.JScrollPane();
    StatusQuoList = new javax.swing.JList();
    jScrollPane6 = new javax.swing.JScrollPane();
    AntiIdealiPoints = new javax.swing.JList();
    jLabel8 = new javax.swing.JLabel();
    jLabel9 = new javax.swing.JLabel();
    LambdaField = new javax.swing.JTextField();
    DistanceComboBox = new javax.swing.JComboBox(Problem.Metric.values());
    jLabel10 = new javax.swing.JLabel();
    jButton2 = new javax.swing.JButton();
    BOOXField = new javax.swing.JTextField();
    BOOYField = new javax.swing.JTextField();
    jButton3 = new javax.swing.JButton();
    jLabel11 = new javax.swing.JLabel();
    TPXField = new javax.swing.JTextField();
    jLabel12 = new javax.swing.JLabel();
    TPYField = new javax.swing.JTextField();
    jButton4 = new javax.swing.JButton();
    jButton5 = new javax.swing.JButton();
    jButton6 = new javax.swing.JButton();
    jButton7 = new javax.swing.JButton();
    jLabel13 = new javax.swing.JLabel();
    SQXField = new javax.swing.JTextField();
    SQYField = new javax.swing.JTextField();
    AIXPoint = new javax.swing.JTextField();
    AIYField = new javax.swing.JTextField();
    jButton8 = new javax.swing.JButton();
    jButton9 = new javax.swing.JButton();
    jButton10 = new javax.swing.JButton();
    jPanel2 = new javax.swing.JPanel();
    jMenuBar1 = new javax.swing.JMenuBar();
    jMenu1 = new javax.swing.JMenu();
    jMenuItem1 = new javax.swing.JMenuItem();
    jMenu2 = new javax.swing.JMenu();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("Ref Set Algorithm");
    setMinimumSize(new java.awt.Dimension(600, 400));

    jLabel1.setText("Number of criteria");

    criteriaNumberTextField.setToolTipText("");
    criteriaNumberTextField.setEnabled(false);

    jButton1.setText("Solve");
    jButton1.setEnabled(false);
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });

    jLabel2.setText("Criteria names");

    jLabel3.setText("Alternatives");

    jLabel4.setText("Bounds of optimality");

    jLabel5.setText("Target points");

    jLabel6.setText("Status Quo points");

    jLabel7.setText("Anti-ideal points");

    CriteriaList.setEnabled(false);
    jScrollPane1.setViewportView(CriteriaList);

    AlternativeList.setEnabled(false);
    jScrollPane2.setViewportView(AlternativeList);
    AlternativeList.setCellRenderer(new AlternativeRenderer());

    BoundsOfOptimalityList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    jScrollPane3.setViewportView(BoundsOfOptimalityList);

    TargetPointsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    jScrollPane4.setViewportView(TargetPointsList);

    StatusQuoList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    jScrollPane5.setViewportView(StatusQuoList);

    AntiIdealiPoints.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    jScrollPane6.setViewportView(AntiIdealiPoints);

    jLabel8.setText("Lambda");

    jLabel9.setText("Distance function");

    DistanceComboBox.setEnabled(false);
    DistanceComboBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        DistanceComboBoxActionPerformed(evt);
      }
    });

    jLabel10.setText("Add a point");

    jButton2.setText("Delete selected point");
    jButton2.setEnabled(false);
    jButton2.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton2ActionPerformed(evt);
      }
    });

    jButton3.setText("Add point");
    jButton3.setEnabled(false);
    jButton3.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton3ActionPerformed(evt);
      }
    });

    jLabel11.setText("Add a point");

    jLabel12.setText("Add a point");

    TPYField.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        TPYFieldActionPerformed(evt);
      }
    });

    jButton4.setText("Delete selected point");
    jButton4.setEnabled(false);
    jButton4.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton4ActionPerformed(evt);
      }
    });

    jButton5.setText("Add point");
    jButton5.setEnabled(false);
    jButton5.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton5ActionPerformed(evt);
      }
    });

    jButton6.setText("Delete selected point");
    jButton6.setEnabled(false);
    jButton6.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton6ActionPerformed(evt);
      }
    });

    jButton7.setText("Delete selected point");
    jButton7.setEnabled(false);
    jButton7.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton7ActionPerformed(evt);
      }
    });

    jLabel13.setText("Add a point");

    jButton8.setText("Add point");
    jButton8.setEnabled(false);
    jButton8.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton8ActionPerformed(evt);
      }
    });

    jButton9.setText("Add point");
    jButton9.setEnabled(false);
    jButton9.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton9ActionPerformed(evt);
      }
    });

    jButton10.setText("Check consistency");
    jButton10.setEnabled(false);
    jButton10.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton10ActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel2)
          .addComponent(jLabel3)
          .addComponent(jLabel5)
          .addComponent(jLabel6)
          .addComponent(jLabel7)
          .addComponent(jLabel8)
          .addComponent(jLabel9)
          .addComponent(jLabel4))
        .addGap(24, 24, 24)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jScrollPane6)
          .addComponent(criteriaNumberTextField, javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(LambdaField, javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(DistanceComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jButton7)
            .addGap(0, 0, Short.MAX_VALUE))
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addComponent(jButton10)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jButton1))
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jLabel10)
                    .addGap(18, 18, 18)
                    .addComponent(BOOXField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                  .addComponent(jButton2)
                  .addComponent(jButton4)
                  .addComponent(jButton6))
                .addGap(51, 51, 51))
              .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                      .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(SQXField, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                      .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(TPXField, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(18, 18, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                      .addComponent(TPYField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                      .addComponent(SQYField, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                  .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(AIXPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(AIYField, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                      .addComponent(BOOYField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jButton8)
              .addComponent(jButton9)
              .addComponent(jButton5)
              .addComponent(jButton3))
            .addGap(145, 145, 145))))
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(criteriaNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel2)
          .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel3)
          .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(BOOXField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton3)
                .addComponent(BOOYField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel10)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
            .addComponent(jButton2))
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(jLabel12)
              .addComponent(TPXField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(TPYField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jButton5))
            .addGap(17, 17, 17)
            .addComponent(jButton4))
          .addComponent(jLabel5)
          .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(jLabel11)
              .addComponent(SQXField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(SQYField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jButton9))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton6))
          .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel6))
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(7, 7, 7)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(jLabel13)
              .addComponent(AIXPoint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(AIYField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jButton8))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton7))
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel7)
              .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(0, 3, Short.MAX_VALUE)))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(LambdaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel8))
        .addGap(18, 18, 18)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(DistanceComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel9)
          .addComponent(jButton1)
          .addComponent(jButton10))
        .addGap(0, 10, Short.MAX_VALUE))
    );

    jTabbedPane1.addTab("Data input", jPanel1);

    jPanel2.setLayout(new java.awt.BorderLayout());
    jTabbedPane1.addTab("Chart", jPanel2);

    jMenu1.setText("File");

    jMenuItem1.setText("Load from file");
    jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jMenuItem1ActionPerformed(evt);
      }
    });
    jMenu1.add(jMenuItem1);

    jMenuBar1.add(jMenu1);

    jMenu2.setText("Help");
    jMenuBar1.add(jMenu2);
    jMenu2.getAccessibleContext().setAccessibleDescription("");

    setJMenuBar(jMenuBar1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jTabbedPane1)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addComponent(jTabbedPane1)
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
      if (evt.getSource() == jMenuItem1) {
          int returnValue = fc1.showOpenDialog(MainWindow.this);

          if (returnValue == JFileChooser.APPROVE_OPTION) {
              File file = fc1.getSelectedFile();
          try {
            problem.readProblem(file);
            fillFields();
            setEnabled();
            if (problem.criteriaSize() == 2) {
              plotData();
            }
          } catch (FileNotFoundException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
          } catch (NegativeValueException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
          } catch (NullValueException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
          } catch (InputMismatchException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
          } catch (Exception ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
          }
          }
      }
  }//GEN-LAST:event_jMenuItem1ActionPerformed

  private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    int index = BoundsOfOptimalityList.getSelectedIndex();
    if (index != -1)
    {
      problem.getBOO().removePoint(index);
    }
    updateAll();
  }//GEN-LAST:event_jButton2ActionPerformed

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    //int cn = Integer.parseInt(criteriaNumberTextField.getText());
    if (!problem.isConsistent())
    {
      JOptionPane.showMessageDialog(rootPane, problem.getConsistencyProblem(), "Consistency error", JOptionPane.ERROR_MESSAGE);
      return;
    }
    Alternative a = problem.solve();
    a.showConsole();
  }//GEN-LAST:event_jButton1ActionPerformed

  private void TPYFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TPYFieldActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_TPYFieldActionPerformed

  private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
    RefPoint point = getPointFromInput(TPXField, TPYField);
    problem.getTP().addPoint(point);    // TODO add your handling code here:
    updateAll();
  }//GEN-LAST:event_jButton5ActionPerformed

  private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    RefPoint point = getPointFromInput(BOOXField, BOOYField);
    problem.getBOO().addPoint(point);
    updateAll();
  }//GEN-LAST:event_jButton3ActionPerformed

  private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
    RefPoint point = getPointFromInput(SQXField, SQYField);
    problem.getSQ().addPoint(point);    // TODO add your handling code here:
    updateAll();
  }//GEN-LAST:event_jButton9ActionPerformed

  private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
    RefPoint point = getPointFromInput(AIXPoint, AIYField);
    problem.getAI().addPoint(point);    // TODO add your handling code here:
    updateAll();
  }//GEN-LAST:event_jButton8ActionPerformed

  private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    int index = TargetPointsList.getSelectedIndex();
    if (index != -1)
    {
      problem.getTP().removePoint(index);
    }
    updateAll();
  }//GEN-LAST:event_jButton4ActionPerformed

  private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
    int index = StatusQuoList.getSelectedIndex();
    if (index != -1)
    {
      problem.getSQ().removePoint(index);
    }
    updateAll();
  }//GEN-LAST:event_jButton6ActionPerformed

  private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
    int index = AntiIdealiPoints.getSelectedIndex();
    if (index != -1)
    {
      problem.getAI().removePoint(index);
    }
    updateAll();
  }//GEN-LAST:event_jButton7ActionPerformed

  private void DistanceComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DistanceComboBoxActionPerformed
    problem.setMetric((Problem.Metric)DistanceComboBox.getSelectedItem());
  }//GEN-LAST:event_DistanceComboBoxActionPerformed

  private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
    if (!problem.isConsistent())
    {
      JOptionPane.showMessageDialog(rootPane, problem.getConsistencyProblem(), "Consistency error", JOptionPane.ERROR_MESSAGE);
    }
    else
    {
      JOptionPane.showMessageDialog(rootPane, problem.getConsistencyProblem(), "Consistency", JOptionPane.INFORMATION_MESSAGE);
    }
  }//GEN-LAST:event_jButton10ActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      @Override
      public void run() {
        new MainWindow().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextField AIXPoint;
  private javax.swing.JTextField AIYField;
  private javax.swing.JList AlternativeList;
  private javax.swing.JList AntiIdealiPoints;
  private javax.swing.JTextField BOOXField;
  private javax.swing.JTextField BOOYField;
  private javax.swing.JList BoundsOfOptimalityList;
  private javax.swing.JList CriteriaList;
  private javax.swing.JComboBox DistanceComboBox;
  private javax.swing.JTextField LambdaField;
  private javax.swing.JTextField SQXField;
  private javax.swing.JTextField SQYField;
  private javax.swing.JList StatusQuoList;
  private javax.swing.JTextField TPXField;
  private javax.swing.JTextField TPYField;
  private javax.swing.JList TargetPointsList;
  private javax.swing.JTextField criteriaNumberTextField;
  private javax.swing.JButton jButton1;
  private javax.swing.JButton jButton10;
  private javax.swing.JButton jButton2;
  private javax.swing.JButton jButton3;
  private javax.swing.JButton jButton4;
  private javax.swing.JButton jButton5;
  private javax.swing.JButton jButton6;
  private javax.swing.JButton jButton7;
  private javax.swing.JButton jButton8;
  private javax.swing.JButton jButton9;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel10;
  private javax.swing.JLabel jLabel11;
  private javax.swing.JLabel jLabel12;
  private javax.swing.JLabel jLabel13;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JLabel jLabel9;
  private javax.swing.JMenu jMenu1;
  private javax.swing.JMenu jMenu2;
  private javax.swing.JMenuBar jMenuBar1;
  private javax.swing.JMenuItem jMenuItem1;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JScrollPane jScrollPane3;
  private javax.swing.JScrollPane jScrollPane4;
  private javax.swing.JScrollPane jScrollPane5;
  private javax.swing.JScrollPane jScrollPane6;
  private javax.swing.JTabbedPane jTabbedPane1;
  // End of variables declaration//GEN-END:variables

  private void fillFields() {
    AlternativeList.setModel(problem);
    BoundsOfOptimalityList.setModel((problem.getBOO()));
    TargetPointsList.setModel(problem.getTP());
    StatusQuoList.setModel(problem.getSQ());
    AntiIdealiPoints.setModel(problem.getAI());
    criteriaNumberTextField.setText(Integer.toString(problem.criteriaSize()));
    LambdaField.setText(Double.toString(problem.getLambda()));
  }

  private RefPoint getPointFromInput(JTextField xfield, JTextField yfield) {
    Double X = null, Y = null;
    try
    {
      X = Double.parseDouble(xfield.getText());
      Y = Double.parseDouble(yfield.getText());
    }
    catch (NumberFormatException e)
    {
      JOptionPane.showMessageDialog(rootPane, "Please input real values", "Parse error", JOptionPane.ERROR_MESSAGE);
    }
    RefPoint point = new RefPoint();
    ArrayList<Double> list = new ArrayList<Double>();
    list.add(X);
    list.add(Y);
    try {
      point.addCriteria(list);
    } catch (NegativeValueException ex) {
      JOptionPane.showMessageDialog(rootPane, "Values has to be positive", "Parse error", JOptionPane.ERROR_MESSAGE);
    } catch (NullValueException ex) {
      JOptionPane.showMessageDialog(rootPane, "Internal error", "Parse error", JOptionPane.ERROR_MESSAGE);
    }
    return point;
  }

  private void plotData() {
    DataTable pareto_optimal = getDataTableFromArrayList(problem.getParetoOptimalAlternatives());
    DataTable rest = getDataTableFromArrayList(problem.getRest());
    DataTable bounds = getDataTableFromArrayListRefPoints(problem.getBOO().getPoints());
    DataTable target = getDataTableFromArrayListRefPoints(problem.getTP().getPoints());
    DataTable quo = getDataTableFromArrayListRefPoints(problem.getSQ().getPoints());
    DataTable anti = getDataTableFromArrayListRefPoints(problem.getAI().getPoints());

    plot = new XYPlot(pareto_optimal, rest, bounds, target, quo, anti);
    DefaultPointRenderer2D point_renderer = new DefaultPointRenderer2D();
    point_renderer.setSetting(PointRenderer.COLOR, Color.GREEN);
    plot.setPointRenderer(pareto_optimal, point_renderer);
    point_renderer = new DefaultPointRenderer2D();
    point_renderer.setSetting(PointRenderer.COLOR, Color.BLACK);
    plot.setPointRenderer(rest, point_renderer);
    point_renderer = new DefaultPointRenderer2D();
    point_renderer.setSetting(PointRenderer.COLOR, Color.ORANGE);
    plot.setPointRenderer(bounds, point_renderer);
    point_renderer = new DefaultPointRenderer2D();
    point_renderer.setSetting(PointRenderer.COLOR, Color.BLUE);
    plot.setPointRenderer(target, point_renderer);
    point_renderer = new DefaultPointRenderer2D();
    point_renderer.setSetting(PointRenderer.COLOR, Color.YELLOW);
    plot.setPointRenderer(quo, point_renderer);
    point_renderer = new DefaultPointRenderer2D();
    point_renderer.setSetting(PointRenderer.COLOR, Color.RED);
    plot.setPointRenderer(anti, point_renderer);
    jPanel2.add(new InteractivePanel(plot));
    jPanel2.repaint();
  }

  private void setEnabled() {
    jButton1.setEnabled(true);
    jButton2.setEnabled(true);
    jButton3.setEnabled(true);
    jButton4.setEnabled(true);
    jButton5.setEnabled(true);
    jButton6.setEnabled(true);
    jButton7.setEnabled(true);
    jButton8.setEnabled(true);
    jButton9.setEnabled(true);
    jButton10.setEnabled(true);
    DistanceComboBox.setEnabled(true);
  }

  private DataTable getDataTableFromArrayList(Iterable<Alternative> array) {
    DataTable ret = new DataTable(Double.class, Double.class);
    for (Alternative a : array) {
      RefPoint rp = a.getPoint();
      ret.add(rp.getCriterionValue(0), rp.getCriterionValue(1));
    }
    return ret;
  }
  
  private DataTable getDataTableFromArrayListRefPoints(Iterable<RefPoint> array) {
    DataTable ret = new DataTable(Double.class, Double.class);
    for (RefPoint rp : array) {
      ret.add(rp.getCriterionValue(0), rp.getCriterionValue(1));
    }
    return ret;
  }

  private void updateAll() {
    jPanel2.removeAll();
    plotData();
   }

}
